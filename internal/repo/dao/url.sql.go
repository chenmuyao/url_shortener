// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: url.sql

package dao

import (
	"context"
)

const getByID = `-- name: GetByID :one
SELECT (url)
FROM "urls"
WHERE "id" = ($1)
`

func (q *Queries) GetByID(ctx context.Context, id int64) (string, error) {
	row := q.db.QueryRowContext(ctx, getByID, id)
	var url string
	err := row.Scan(&url)
	return url, err
}

const getIDByURL = `-- name: GetIDByURL :one
SELECT (id)
FROM "urls"
WHERE "url" = ($1)
`

func (q *Queries) GetIDByURL(ctx context.Context, url string) (int64, error) {
	row := q.db.QueryRowContext(ctx, getIDByURL, url)
	var id int64
	err := row.Scan(&id)
	return id, err
}

const insertURL = `-- name: InsertURL :one
INSERT INTO "urls" (url) VALUES ($1) RETURNING id, url
`

func (q *Queries) InsertURL(ctx context.Context, url string) (Url, error) {
	row := q.db.QueryRowContext(ctx, insertURL, url)
	var i Url
	err := row.Scan(&i.ID, &i.Url)
	return i, err
}
