// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/service/url.go
//
// Generated by this command:
//
//	mockgen -source=./internal/service/url.go -package=urlsvcmock -destination=./internal/service/mocks/url.mock.go
//

// Package urlsvcmock is a generated GoMock package.
package urlsvcmock

import (
	context "context"
	reflect "reflect"

	domain "github.com/chenmuyao/url_shortener/internal/domain"
	gomock "go.uber.org/mock/gomock"
)

// MockUrlShortenerSvc is a mock of UrlShortenerSvc interface.
type MockUrlShortenerSvc struct {
	ctrl     *gomock.Controller
	recorder *MockUrlShortenerSvcMockRecorder
	isgomock struct{}
}

// MockUrlShortenerSvcMockRecorder is the mock recorder for MockUrlShortenerSvc.
type MockUrlShortenerSvcMockRecorder struct {
	mock *MockUrlShortenerSvc
}

// NewMockUrlShortenerSvc creates a new mock instance.
func NewMockUrlShortenerSvc(ctrl *gomock.Controller) *MockUrlShortenerSvc {
	mock := &MockUrlShortenerSvc{ctrl: ctrl}
	mock.recorder = &MockUrlShortenerSvcMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUrlShortenerSvc) EXPECT() *MockUrlShortenerSvcMockRecorder {
	return m.recorder
}

// GetURL mocks base method.
func (m *MockUrlShortenerSvc) GetURL(ctx context.Context, shortID string) (domain.Url, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetURL", ctx, shortID)
	ret0, _ := ret[0].(domain.Url)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetURL indicates an expected call of GetURL.
func (mr *MockUrlShortenerSvcMockRecorder) GetURL(ctx, shortID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetURL", reflect.TypeOf((*MockUrlShortenerSvc)(nil).GetURL), ctx, shortID)
}

// Shorten mocks base method.
func (m *MockUrlShortenerSvc) Shorten(ctx context.Context, fullUrl string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Shorten", ctx, fullUrl)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Shorten indicates an expected call of Shorten.
func (mr *MockUrlShortenerSvcMockRecorder) Shorten(ctx, fullUrl any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Shorten", reflect.TypeOf((*MockUrlShortenerSvc)(nil).Shorten), ctx, fullUrl)
}
